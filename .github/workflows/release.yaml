name: Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: The release name
        default: ""
        required: true

jobs:
  versions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Populate output versions
      id: read_versions
      run: |
        set -o errexit -o nounset -o pipefail
        repo_root=$(git rev-parse --show-toplevel)
        versions_txt="${repo_root}/versions.txt"
        jq_query='split("\n") | map(select(. != ""))'
        echo "::set-output name=versions::$(jq --raw-input --compact-output --slurp "${jq_query}" "${versions_txt}")"
    - name: Cache config fragments
      uses: actions/cache@v2
      with:
        path: .config_fragments
        key: config_fragments
    outputs:
      versions: ${{ steps.read_versions.outputs.versions }}
  build:
    needs: versions
    strategy:
      matrix:
        version: ${{ fromJson(needs.versions.outputs.versions) }}
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        set -o errexit -o nounset -o pipefail
        sudo apt-get update
        sudo apt-get install -y \
          bc \
          bison \
          flex \
          gcc \
          libelf-dev \
          make
    - name: Checkout kernel
      uses: actions/checkout@v2
      with:
        repository: torvalds/linux
        ref: ${{ matrix.version }}
    - name: Cache config fragments
      uses: actions/cache@v2
      with:
        path: .config_fragments
        key: config_fragments
    - name: Print config fragments
      run: cat .config_fragments
    - name: Configure kernel
      run: |
        set -o errexit -o nounset -o pipefail
        make x86_64_defconfig
        ./scripts/kconfig/merge_config.sh .config .config_fragments
    - name: Build kernel
      run: |
        set -o errexit -o nounset -o pipefail
        time make vmlinux --jobs=$(nproc)
        tar -czvf vmlinux-${{ matrix.version }}.tar.gz vmlinux
    - name: Upload kernel
      uses: actions/upload-artifact@v2
      with:
        name: vmlinux-${{ matrix.version }}.tar.gz
        path: vmlinux-${{ matrix.version }}.tar.gz
        retention-days: 1
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ inputs.release_name }}
        draft: true
        fail_on_unmatched_files: true
        files: vmlinux-*.tar.gz
